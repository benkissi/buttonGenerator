{"version":3,"sources":["components/buttonAttributes/BaseAttr.jsx","components/buttonOutput/Button.jsx","components/buttonOutput/Codegenerator.jsx","components/descriptions/Header.jsx","components/descriptions/Footer.jsx","components/App.js","serviceWorker.js","index.js"],"names":["BaseAttr","handleBgPickerChange","color","event","_this","refs","bgColor","value","hex","props","onBgInput","handleFontPickerChange","fontColor","onFontInput","handleBorderPickerChange","borderColor","onBorderInput","text","this","buttonText","onTextInput","url","buttonURL","onURLInput","width","buttonWidth","onWidthInput","height","buttonHeight","onHeightInput","buttonPart","onBoldInput","pickerType","focus","onInputFocus","react_default","a","createElement","className","ref","onInput","onTextChange","bind","placeholder","type","onWidthChange","onHeightChange","onBlur","renderPicker","onFocus","onChange","onHexChange","picker","lib","onChangeComplete","fColor","border","id","checked","bold","onBoldChange","onURLChange","Component","Button","buttonStyle","verticalAlign","concat","backgroundColor","bg","lineHeight","font","fontWeight","href","style","defaultProps","ButtonCode","_buttonStyle","display","vertical-align","margin","padding","border-radius","transition","font-family","font-size","font-weight","-webkit-appearance","line-height","text-align","cursor","background-color","Object","defineProperty","code","entries","map","entry","key","console","log","join","Header","Footer","target","window","$","jQuery","jquery","require","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentInput","setState","newWidth","newHeight","parseInt","descriptions_Header","buttonAttributes_BaseAttr","widthChangeHandeler","textChangeHandeler","heightChangeHandeler","bgChangeHandeler","fontChangeHandeler","borderChangeHandeler","boldChangeHandeler","URLChangeHandeler","renderPickerHandeler","buttonOutput_Button","Codegenerator","descriptions_Footer","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4ed8192.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\n\r\nclass BaseAttr extends Component {\r\n\r\n    onTextChange() {\r\n        let text = this.refs.buttonText.value;\r\n        this.props.onTextInput(text)\r\n    }\r\n\r\n    onURLChange() {\r\n        let url =this.refs.buttonURL.value;\r\n        this.props.onURLInput(url);\r\n    }\r\n\r\n    onWidthChange() {\r\n        let width = this.refs.buttonWidth.value;\r\n        this.props.onWidthInput(width);\r\n    }\r\n\r\n    onHeightChange() {\r\n        let height = this.refs.buttonHeight.value;\r\n        this.props.onHeightInput(height);\r\n    }\r\n\r\n    onHexChange(buttonPart) {\r\n        if(buttonPart === 'bg'){\r\n            let hex = this.refs.bgColor.value;\r\n            this.props.onBgInput(hex);\r\n        }else if (buttonPart === 'font') {\r\n            let hex = this.refs.fontColor.value;\r\n            this.props.onFontInput(hex);\r\n        }else{\r\n            let hex = this.refs.borderColor.value;\r\n            this.props.onBorderInput(hex);\r\n        }\r\n    }\r\n\r\n    onBoldChange() {\r\n        this.props.onBoldInput();\r\n    }\r\n\r\n    handleBgPickerChange = (color, event) => {\r\n        this.refs.bgColor.value = color.hex;\r\n        this.props.onBgInput(color.hex);\r\n    };\r\n\r\n    handleFontPickerChange = (color, event) => {\r\n        this.refs.fontColor.value = color.hex;\r\n        this.props.onFontInput(color.hex);\r\n    };\r\n\r\n    handleBorderPickerChange = (color, event) => {\r\n        this.refs.borderColor.value = color.hex;\r\n        this.props.onBorderInput(color.hex);\r\n    };\r\n\r\n    renderPicker(pickerType, focus) {\r\n        if(focus) {\r\n            this.props.onInputFocus(pickerType);\r\n        }else{\r\n            this.props.onInputFocus('')\r\n        }\r\n           \r\n    }\r\n\r\n\r\n    render () {  \r\n\r\n        return (\r\n            <div className=\"grid-conatiner\">\r\n                <div className=\"grid-x grid-margin-x\">\r\n                    <div className=\"cell auto\">\r\n                        <label> Button Text\r\n                            <input ref=\"buttonText\" onInput={this.onTextChange.bind(this)} placeholder=\"Enter button text\" type=\"text\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-x grid-margin-x\">\r\n                    <div className=\"cell medium-5\">\r\n                        <label>Button Width\r\n                            <input type=\"number\" onInput={this.onWidthChange.bind(this)} ref=\"buttonWidth\" placeholder=\"Enter button width\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"cell medium-5\">\r\n                        <label>Button Height\r\n                            <input type=\"number\" onInput={this.onHeightChange.bind(this)} ref=\"buttonHeight\" placeholder=\"Enter button height\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-x grid-margin-x\">\r\n                    <div className=\"cell medium-5\">\r\n                        <label>Background color\r\n                            <input type=\"text\" ref=\"bgColor\" placeholder=\"Enter button color\"\r\n                            onBlur={this.renderPicker.bind(this, 'picker1', false)} \r\n                            onFocus={this.renderPicker.bind(this, 'picker1', true)} \r\n                            onChange={this.onHexChange.bind(this, 'bg')}/>\r\n                        </label>\r\n                        {this.props.picker === 'picker1'?<SketchPicker color={this.props.color} \r\n                        onChangeComplete={this.handleBgPickerChange.bind(this)}/> : null}\r\n                    </div>\r\n                    <div className=\"cell medium-5\">\r\n                        <label>Font color\r\n                            <input type=\"text\" ref=\"fontColor\" placeholder=\"Enter font color\"\r\n                            onBlur={this.renderPicker.bind(this, 'picker2', false)} \r\n                            onFocus={this.renderPicker.bind(this, 'picker2', true)}\r\n                            onChange={this.onHexChange.bind(this, 'font')}/>\r\n                        </label>\r\n                        {this.props.picker === 'picker2'?<SketchPicker color={this.props.fColor} \r\n                        onChangeComplete={this.handleFontPickerChange.bind(this)}/> : null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-x grid-margin-x\">\r\n                    <div className=\"cell medium-5\">\r\n                        <label>Border color\r\n                            <input type=\"text\" ref=\"borderColor\" placeholder=\"Enter border color\"\r\n                            onBlur={this.renderPicker.bind(this, 'picker3', false)} \r\n                            onFocus={this.renderPicker.bind(this, 'picker3', true)}\r\n                            onChange={this.onHexChange.bind(this, 'border')}/>\r\n                        </label>\r\n                        {this.props.picker === 'picker3'?<SketchPicker color={this.props.border} \r\n                        onChangeComplete={this.handleBorderPickerChange.bind(this)}/> : null}\r\n                    </div>\r\n                    <div id=\"bold-checkbox\" className=\"cell medium-5\">\r\n                        <span><label><input checked={this.props.bold} onChange={this.onBoldChange.bind(this)} type=\"checkbox\" ref=\"boldCheck\" placeholder=\"Enter font color\"/>Make font bold</label></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-conatiner\">\r\n                    <div className=\"grid-x grid-margin-x\">\r\n                        <div className=\"cell auto\">\r\n                            <label> Button URL\r\n                                <input ref=\"buttonURL\"  onInput={this. onURLChange.bind(this)} placeholder=\"Enter button URL\" type=\"text\"/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default BaseAttr;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles/components/BaseAttr.scss';\r\n\r\n\r\nclass Button extends Component {\r\n    render () {\r\n        var buttonStyle = {\r\n            verticalAlign: 'middle',\r\n            width: `${this.props.width}rem`,\r\n            height: `${this.props.height}rem`,\r\n            backgroundColor: `${this.props.bg}`,\r\n            lineHeight: '1',\r\n            color: `${this.props.font}`,\r\n            fontWeight: `${this.props.bold? 'bold': 'normal'}`,\r\n            border:`${this.props.border !== '' ? '2px solid '+this.props.border : '1px solid transparent' }`\r\n        }\r\n        return (\r\n            <div className=\"callout secondary large\">\r\n                <div className=\"grid-x grid-margin-x align-center\">\r\n                    <a href={this.props.url} style={buttonStyle} className=\"center button\">{this.props.text}</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: 'empty',\r\n    bg: '#1779ba',\r\n    width: 10,\r\n    height: 2,\r\n    border: '',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    bgColor: PropTypes.string,\r\n    font: PropTypes.string,\r\n    border: PropTypes.string,\r\n    bold: PropTypes.bool,\r\n    url: PropTypes.string\r\n\r\n}\r\n\r\nexport default Button;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass ButtonCode extends Component {\r\n\r\n    render() {\r\n        var buttonStyle = {\r\n            width: `${this.props.width}rem`,\r\n            height: `${this.props.height}rem`,\r\n            display: 'inline-block',\r\n            'vertical-align': 'middle',\r\n            margin: '0 0 1rem 0',\r\n            padding: '.85em 1em',\r\n            'border-radius': '0',\r\n            transition: 'background-color .25s ease-out,color .25s ease-out',\r\n            'font-family': 'inherit',\r\n            'font-size': '.9rem',\r\n            'font-weight': `${this.props.bold? 'bold': 'normal'}`,\r\n            '-webkit-appearance': 'none',\r\n            'line-height': '1',\r\n            'text-align': 'center',\r\n            cursor: 'pointer',\r\n            'background-color': `${this.props.bg}`,\r\n            border:`${this.props.border !== '' ? '2px solid '+this.props.border : '1px solid transparent' }`,\r\n            color: `${this.props.font}`,\r\n            'font-weight': `${this.props.bold? 'bold': 'normal'}`,\r\n            '-webkit-text-size-adjust':'none',\r\n            'mso-hide':'all',\r\n            'v-text-anchor': 'middle'\r\n        }\r\n\r\n        var code = `<div><!--[if mso]>\r\n        <v:roundrect xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" href=\"http://\" style=\"height:40px;v-text-anchor:middle;width:200px;\" arcsize=\"10%\" strokecolor=\"#1e3650\" fillcolor=\"#556270\">\r\n          <w:anchorlock/>\r\n          <center style=\"color:#ffffff;font-family:sans-serif;font-size:.9rem;${this.props.bold? 'bold': 'normal'};\">${this.props.text}</center>\r\n        </v:roundrect>\r\n      <![endif]--><a href=\"http://${this.props.url}\"\r\n      style=\"${Object.entries(buttonStyle).map( entry => {\r\n            let key = entry[0];\r\n            let value = entry[1];\r\n            console.log( `${key}: ${value};`);\r\n            return ( `${key}: ${value};`)\r\n      }).join(' ')}\">${this.props.text}</a></div>`\r\n        return (\r\n            <div className=\"callout success\">\r\n                <p>{code}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nButtonCode.defaultProps = {\r\n    text: 'Button Text',\r\n    width: '10',\r\n    height: '2',     \r\n    bg: '#1779ba',\r\n    border: '',\r\n    bold: false,\r\n    url: '',\r\n    font: '#ffffff'\r\n}\r\n\r\nexport default ButtonCode","import React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"heading\">\r\n                <div className=\"grid-x grid-margin-x align-center\">\r\n                    <div>\r\n                        <h1>Email Button Generator</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-x grid-margin-x align-center\">\r\n                    <div className=\"cell medium-4 align-center\">\r\n                        <p className=\"text-center\">\r\n                            Design gorgeous buttons and use them in your emails.\r\n                        </p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"footer\">\r\n                <div className=\"grid-x grid-margin-x align-center\">\r\n                    <div className=\"cell medium-6 text-center\">\r\n                        <p>Created by Ben Kissi</p>\r\n                    </div>\r\n                    <div className=\"cell medium-6 text-center\">\r\n                    <div className=\"grid-x grid-margin-x align-center\">\r\n                        <div className=\"cell medium-6 text-center\">\r\n                            <a target=\"_blank\" href=\"https://twitter.com/bfkissi\">Twitter</a>\r\n                        </div>\r\n                        <div className=\"cell medium-6 text-center\">\r\n                            <a target=\"_blank\" href=\"https://github.com/benkissi\">Github</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport BaseAttr from './buttonAttributes/BaseAttr';\nimport Button from './buttonOutput/Button';\nimport ButtonCode from './buttonOutput/Codegenerator';\nimport Header from './descriptions/Header';\nimport Footer from './descriptions/Footer';\nimport '../styles/components/App.scss';\n\n// import Foundation from 'foundation-sites';\nimport jquery from 'jquery';\n\n\nwindow.$ = window.jQuery = jquery;\nrequire('foundation-sites');\n\n\nrequire('foundation-sites/dist/css/foundation.min.css');\nrequire('foundation-sites/dist/js/foundation.min.js');\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      buttonText: 'Button Text',\n      buttonURL: '#',\n      buttonWidth: 0,\n      buttonHeight: 0,\n      bgColor:'',\n      fontColor:'',\n      borderColor:'',\n      bold: false,\n      renderPicker:''\n    }\n  }\n\n  textChangeHandeler(currentInput) {\n    this.setState({\n      buttonText: currentInput\n    });\n  }\n\n  URLChangeHandeler(currentInput) {\n    this.setState({\n      buttonURL: currentInput\n    });\n  }\n\n  widthChangeHandeler(newWidth) {\n    this.setState({\n      buttonWidth: newWidth\n    });\n  }\n\n  heightChangeHandeler(newHeight) {\n    this.setState({\n      buttonHeight: newHeight\n    });\n  }\n\n  bgChangeHandeler(hex) {\n    this.setState({\n      bgColor: hex\n    });\n  }\n\n  fontChangeHandeler(hex) {\n    this.setState({\n      fontColor: hex\n    });\n  }\n\n  borderChangeHandeler(hex) {\n    this.setState({\n      borderColor: hex\n    });\n  }\n\n  boldChangeHandeler() {\n    this.setState({\n      bold: !this.state.bold\n    });\n    console.log(this.state.bold)\n  }\n\n  renderPickerHandeler(pickerType) {\n    this.setState({\n      renderPicker: pickerType\n    });\n\n    console.log(pickerType)\n  }\n\n  render() {\n    if(this.state.buttonWidth !== 0){\n      var width = parseInt(this.state.buttonWidth);\n    }\n    if(this.state.buttonHeight !== 0){\n      var height = parseInt(this.state.buttonHeight);\n    }\n    if(this.state.bgColor !== '') {\n      var bgColor = this.state.bgColor;\n      console.log(this.state.bgColor)\n    }\n    if(this.state.fontColor !== '') {\n      var fontColor = this.state.fontColor;\n      console.log(this.state.fontColor)\n    }\n    if(this.state.borderColor !== '') {\n      var borderColor = this.state.borderColor;\n      console.log(this.state.borderColor)\n    }\n    \n\n    return (\n      <div className=\"app\">\n        <div className=\"grid-conatiner\">\n          <Header/>\n          <div  className=\"grid-x grid-margin-x align-center\">\n            <div className=\"cell medium-10\">\n              <div id=\"generator\">\n                <div  className=\"grid-x grid-margin-x align-center\">\n                  <div className=\"cell medium-5\">\n                    <BaseAttr onWidthInput={this.widthChangeHandeler.bind(this)} \n                    onTextInput={this.textChangeHandeler.bind(this)}\n                    onHeightInput={this.heightChangeHandeler.bind(this)}\n                    onBgInput={this.bgChangeHandeler.bind(this)}\n                    onFontInput={this.fontChangeHandeler.bind(this)} \n                    onBorderInput={this.borderChangeHandeler.bind(this)}\n                    onBoldInput= {this.boldChangeHandeler.bind(this)}\n                    bold={this.state.bold}\n                    color={bgColor}\n                    fColor={fontColor}\n                    border={borderColor}\n                    onURLInput={this.URLChangeHandeler.bind(this)}\n                    onInputFocus={this.renderPickerHandeler.bind(this)}\n                    picker={this.state.renderPicker}/>\n                  </div>\n                  <div className=\"cell medium-5\">\n                    <div className=\"grid-x grid-margin-x align-center\">\n                      <div className=\"cell medium-12\">\n                        <Button \n                        text={this.state.buttonText} \n                        width={width} height={height} \n                        bg={bgColor}\n                        border={borderColor}\n                        bold={this.state.bold}\n                        url={this.state.buttonURL}\n                        font={fontColor}/>\n                      </div>\n                    </div>\n                    <div className=\"grid-x grid-margin-x align-center\">\n                      <div className=\"cell medium-12\">\n                        <ButtonCode\n                        text={this.state.buttonText} \n                        width={width} height={height} \n                        bg={bgColor}\n                        border={borderColor}\n                        bold={this.state.bold}\n                        url={this.state.buttonURL}\n                        font={fontColor}/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <Footer/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}